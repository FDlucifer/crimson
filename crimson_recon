#!/bin/bash
#
### CREATED BY KARMAZ
#
#
### TO DO:
# 1. Third level domain enumeration.
# 2. Add all features from crimson_notes.
# 3. Add altns mutations after checking for live and brute again.
# 4. Add nuclei
### FUNCTIONS:
#
# 1. SUBDOMAIN ENUMERATION
# 2. CHECKING LIVE DOMAINS
# 3. LOOKING FOR DOMAIN HIJACKING
# 4. MAKING SCREENS
# 5. LOOKING FOR CORS MISCONFIGURATIONS
# 6. RESOLVE IP ADDRESSES OF DOMAINS 
# 7. MASS SCANN ALL IP ADDRESSES
# 8. SPIDER URLS
#
### LISTS:
#
# 1. live.txt			- LIVE SUBDOMAINS
# 2. ip.txt			- ALL IPS
# 3. ports.txt			- OPENED PORTS
# 4. subjack.txt		- VULNS
# 5. Screens			- STATUS + SCREENS
# 6. cors_scan.txt		- VULNS
# 7. urls.txt			- ALL SPIDERS URLS IN ONE
# 8. status_live.txt		- HTTPS / HTTPS SUBDOMAINS STATUS
#
### WORKFLOW
# 0. *Comment out portscan below if u want to scann all ports of all domains. 
# 1. Start Burp
#	- Create new project - example.domain.com
#	- Turn off interception
# 2. Start this script.
# 3. Check the output listed above (LISTS).
# 4. Select the target domain and start crimson_target module.
# 5. *Eventually proxy urls.txt and status_live.txt with additional headers and listener ON.
###

echo -e "\033[0;31m
 ██████╗██████╗ ██╗███╗   ███╗███████╗ ██████╗ ███╗   ██╗        ██████╗ ███████╗ ██████╗ ██████╗ ███╗   ██╗
██╔════╝██╔══██╗██║████╗ ████║██╔════╝██╔═══██╗████╗  ██║        ██╔══██╗██╔════╝██╔════╝██╔═══██╗████╗  ██║
██║     ██████╔╝██║██╔████╔██║███████╗██║   ██║██╔██╗ ██║        ██████╔╝█████╗  ██║     ██║   ██║██╔██╗ ██║
██║     ██╔══██╗██║██║╚██╔╝██║╚════██║██║   ██║██║╚██╗██║        ██╔══██╗██╔══╝  ██║     ██║   ██║██║╚██╗██║
╚██████╗██║  ██║██║██║ ╚═╝ ██║███████║╚██████╔╝██║ ╚████║███████╗██║  ██║███████╗╚██████╗╚██████╔╝██║ ╚████║
 ╚═════╝╚═╝  ╚═╝╚═╝╚═╝     ╚═╝╚══════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝

\033[0m"

if [ -z $1 ]
then
echo "Usage: ./crimson_recon example.domain.com"
exit  1
fi

### REMEMBER ABOUT BURP WITH PROPER SCOPE
echo -e "BURP SCOPE: .*\."$(echo $1 | sed "s/\./\\\./")"$"
read -rsp $'RUN BURP AND ADD SCOPE...\n' -n1 key
export DOMAIN=$1
mkdir $HOME/bounty/$DOMAIN -p
cd $HOME/bounty/$DOMAIN

### SCRAPING DOMAINS && BRUTEFORCING DOMAINS
echo -e "\033[0;31m [+]\033[0m SUBDOMAINS SCRAPING"
curl -s https://crt.sh/?q=$DOMAIN | grep $DOMAIN | grep TD | sed 's/<BR>.*$//g' | sed 's/<\/TD>.*$//' | sed 's/<TD>//g' | sed 's/\*.//g' | sed 's/ //g' | grep -v "TDclass" | sort -u > crt.txt
amass enum --passive -d $DOMAIN -o amass.txt
subfinder -silent -recursive -d $DOMAIN | tee subfinder.txt
echo -e "\033[0;31m [+]\033[0m SUBDOMAINS BRUTEFORCING"
$HOME/tools/puredns/puredns bruteforce $HOME/tools/CRIMSON/words/dns $DOMAIN -w massdns.txt
# OLD BEST BRUTE TECHNIQUE
#$HOME/tools/massdns/scripts/subbrute.py $HOME/tools/CRIMSON/words/dns $DOMAIN | $HOME/tools/massdns/bin/massdns -r $HOME/tools/massdns/lists/resolvers.txt -t A -o S -w massdns.txt
#cat massdns.txt | cut -d " " -f 1 | sed 's/\.[^.]*$//' > brute_dns.txt

### ASSETFINDER FROM TOMNOMNOM
echo -e "\033[0;31m [+]\033[0m START WEBSPIDERS"
assetfinder --subs-only $DOMAIN | tee -a assetfinder.txt

### SPIDER 1 = paramspider.txt
python3 $HOME/tools/ParamSpider/paramspider.py -d $DOMAIN --output ./paramspider.txt --level high
cat paramspider.txt | unfurl -u domains > subdomains_paramspider.txt

### MERGE SUBDOMAIN LISTS
sort -u assetfinder.txt subdomains_paramspider.txt amass.txt subfinder.txt brute_dns.txt crt.txt > $HOME/bounty/$DOMAIN/subdomains.txt

### CHECK FOR LIVE - RESOLVE subdomains.txt
echo -e "\033[0;31m [+]\033[0m CHECK FOR LIVE SUBDOMAINS"
cat subdomains.txt | dnsx -o live1.txt

### MAKE MUTATIONS OF BRUTEFORCED DOMAINS AND REMOVE DUPLICATED FROM PREVIOUS ENUMERATION
echo -e "\033[0;31m [+]\033[0m MUTATE LIVE SUBDOMAINS"
altdns -w $HOME/tools/CRIMSON/words/dns-altdns.txt -i live1.txt -o altdns_temp.txt
cat $HOME/tools/CRIMSON/words/dns | sed "s/$/\.$domain/" > ddns.txt
awk 'FNR==NR {a[$0]++; next} !($0 in a)' ddns.txt altdns_temp.txt > not_duplicated_altdns
awk 'FNR==NR {a[$0]++; next} !($0 in a)' subdomains.txt not_duplicated_altdns > not_duplicated_altdns2
awk 'FNR==NR {a[$0]++; next} !($0 in a)' live1.txt not_duplicated_altdns2 > altdns_with_domain_name
cat altdns_with_domain_name | sed "s/\.$DOMAIN//g" > altdns.txt

### BRUTE FORCE MUTATED WORDLIST
echo -e "\033[0;31m [+]\033[0m CHECK MUTATED SUBDOMAINS FOR LIVE SUBDOMAINS"
$HOME/tools/puredns/puredns bruteforce altdns.txt $DOMAIN -w brute2.txt

### CHECK LIVE FROM BRUTEFORCE OF MUTATED WORDLIST
cat brute2.txt | dnsx -o live2.txt
sort -u live1.txt live2.txt > live.txt
rm live1.txt live2.txt altdns_temp.txt not_duplicated_altnds not_duplicated_altnds2 ddns.txt altdns_with_domain_name altdns.txt brute2.txt

### SPIDER 2 = gau.txt
echo -e "\033[0;31m [+]\033[0m GATHER URLS"
cat live.txt | get-all-urls -subs | tee -a gau.txt
cat gau.txt | unfurl -u domains > subs_gau.txt
sort -u subs_gau.txt live.txt > live2.txt
mv live2.txt live.txt
rm subs_gau.txt

### SPIDER 3 = waybackurls.txt
cat live.txt | waybackurls | tee -a waybackurls.txt
cat waybackurls.txt | unfurl -u domains > subs_waybackurls.txt
sort -u subs_waybackurls.txt live.txt > live2.txt
mv live2.txt live.txt
rm subs_waybackurls.txt

### MERGE SPIDERS = urls.txt
cat waybackurls.txt gau.txt paramspider.txt | qsreplace -a > urls.txt
rm waybackurls.txt paramspider.txt gau.txt

### CHECK FOR CORS MISSCONFIGURATION && DOMAIN TAKEOVER
echo -e "\033[0;31m [+]\033[0m CHECK CORS"
cat live.txt | CorsMe -t 100 | tail -n+11 | tee cors_scan.txt
echo -e "\033[0;31m [+]\033[0m CHECK DOMAIN TAKEOVER"
subjack -w live.txt -t 100 -timeout 30 -o subjack.txt -ssl -a

### SCREENSHOOTS FROM DOMAINS
echo -e "\033[0;31m [+]\033[0m MAKE SCREENSHOTS OF ENUMERATED LIVE DOMAINS"
$HOME/tools/EyeWitness/Python/EyeWitness.py -f $HOME/bounty/$DOMAIN/live.txt -d screens

### ADD urls.txt TO BURPSUITE
echo -e "\033[0;31m [+]\033[0m PROXY ulrs.txt FROM SPIDERS"
cat urls.txt | grep $DOMAIN |grep http | sort -u > proxy.txt
wfuzz -L -Z -z file,proxy.txt -z file,$HOME/tools/CRIMSON/words/blank -p 127.0.0.1:8080 FUZZFUZ2Z

### PORT SCANING ALL DOMAINS
#echo asdqwe123 | sudo -S -E $HOME/tools/port_scan.sh

### CHECK STATUS CODE OF ALL DOMAINS
echo -e "\033[0;31m [+]\033[0m CHECK STATUS CODE OF ENUMERATED LIVE SUBDOMAINS"
cat live.txt | sed "s/^/http:\/\//" >> temp_live.txt
cat live.txt | sed "s/^/https:\/\//" >> temp_live.txt
wfuzz -f status_live.txt,raw -Z -z file,temp_live.txt -z file,$HOME/tools/CRIMSON/words/blank FUZZFUZ2Z
rm temp_live.txt

### PROXY DOMAINS TO BURP
echo -e "\033[0;31m [+]\033[0m PROXY SUBDOMAINS TO BURP"
cat status_live.txt | grep -v "XXX" | cut -d "\"" -f 2 > proxy.txt
wfuzz -L -Z -z file,proxy.txt -z file,$HOME/tools/CRIMSON/words/blank -p 127.0.0.1:8080 FUZZFUZ2Z

### CHECK ZONETRANSFER
dnsrecon -d $DOMAIN -a

### PRINT RESULTS
echo -e "\033[0;31m [+]\033[0m RESULTS: "
echo "\n\nCheck: \n\t - subjack.txt \n\t - cors_scan.txt \n\t - status_live.txt \n\t - BURP & EyeWitness"
scite subjack.txt cors_scan.txt status_live.txt

### CLEAR THE DIRECTORY
rm crt.txt amass.txt assetfinder.txt brute_dns.txt geckodriver.log massdns.txt subfinder.txt

### CHECK STATUS CODE HERE TOO
### GO TO https://httpstatus.io/ + LIVE.TXT
### -S = take the pass from input -E use exported variable from user terminal
# echo asdqwe123 | sudo -S -E $HOME/tools/port_scan.sh

### GREP 2/3/4 LEVEL DOMAINS
# grep -P '^(?:[a-z0-9]+.){1}[^.]*$'	2nd level domains only
# grep -P '^(?:[a-z0-9]+.){2}[^.]*$'	3rd level domains only
# grep -P '^(?:[a-z0-9]+.){2,}[^.]*$'	3rd level domains or higher
# grep -P '^(?:[a-z0-9]+.){2,3}[^.]*$'	3rd to 4th level domains only
# grep -P '^(?:[a-z0-9]+.){3,}[^.]*$'	4th level domains or higher
###


